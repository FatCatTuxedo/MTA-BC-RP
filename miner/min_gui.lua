local factoryWindow local minigameWindowlocal minigameButton = {}local minigameImage = {}local ammoWindowlocal factoryRadioButton = {}local factoryCostLabel local factoryIronLabellocal tempCostTablelocal currentFactoryWeaponlocal currentFactoryWeaponIDlocal currenironlocal currentFactoryIronlocal factoryIronInputlocal factoryProgressbarlocal factoryMakeAmmolocal pRankMultiplier---------------Factory GUI----------------function makeFactoryGUI()	local rx, ry = guiGetScreenSize()	factoryWindow = guiCreateWindow((rx/2) - 153, (ry/2) -255, 304, 516, "Bullet Factory", false)	guiWindowSetSizable(factoryWindow, false)	guiSetAlpha(factoryWindow, 0.96)		-- Radio Buttons	factoryRadioButton[1] = guiCreateRadioButton(30, 28, 254, 19, "Colt. 45 (142 units per kilogram)", false, factoryWindow)	factoryRadioButton[2] = guiCreateRadioButton(30, 47, 254, 19, "Silenced 9mm (142 units per kilogram)", false, factoryWindow)	factoryRadioButton[3] = guiCreateRadioButton(30, 68, 254, 19, "Desert Eagle (24 units per kilogram)", false, factoryWindow)	factoryRadioButton[4] = guiCreateRadioButton(30, 87, 254, 19, "Sawn off shotgun (20 units per kilogram)", false, factoryWindow)	factoryRadioButton[5] = guiCreateRadioButton(30, 106, 254, 19, "SPAS-12 (20 units per kilogram)", false, factoryWindow)	factoryRadioButton[6] = guiCreateRadioButton(30, 125, 254, 19, "AK-47 (43 units per kilogram)", false, factoryWindow)	factoryRadioButton[7] = guiCreateRadioButton(30, 146, 254, 19, "M4 (50 units per kilogram)", false, factoryWindow)	factoryRadioButton[8] = guiCreateRadioButton(30, 165, 254, 19, "Uzi (62 units per kilogram)", false, factoryWindow)	factoryRadioButton[9] = guiCreateRadioButton(30, 185, 254, 19, "Tec-3 (62 units per kilogram)", false, factoryWindow)	factoryRadioButton[10] = guiCreateRadioButton(30, 204, 254, 19, "MP5 (62 units per kilogram)", false, factoryWindow)	factoryRadioButton[11] = guiCreateRadioButton(30, 223, 254, 19, "Shotgun (20 units per kilogram)", false, factoryWindow)	factoryRadioButton[12] = guiCreateRadioButton(30, 242, 254, 19, "Country Rifle (100 units per kilogram)", false, factoryWindow)	factoryRadioButton[13] = guiCreateRadioButton(30, 263, 254, 19, "Sniper Rifle (5 units per kilogram)", false, factoryWindow)	factoryRadioButton[14] = guiCreateRadioButton(30, 282, 254, 19, "Grenade (1 units per kilogram)", false, factoryWindow)	--Buttons	factoryMakeAmmo = guiCreateButton(10, 469, 91, 39, "Make Ammo", false, factoryWindow)	closeFactoryWindow = guiCreateButton(202, 469, 91, 39, "Cancel", false, factoryWindow)	sellIron = guiCreateButton(107, 469, 91, 39, "Sell Iron", false, factoryWindow)	--Labels	separator = guiCreateLabel(12, 300, 287, 16, "____________________________________________", false, factoryWindow)	factoryIronLabel = guiCreateLabel(14, 318, 281, 17, "You currently have 0 grams of iron", false, factoryWindow)	factoryCostLabel = guiCreateLabel(15, 401, 265, 15, "0 units per 0 grams of iron", false, factoryWindow)	descLabel = guiCreateLabel(15, 364, 279, 31, "Write the ammount of iron that you would like to craft (grams)", false, factoryWindow)	moneyLabel = guiCreateLabel(18, 443, 265, 16, "From $0 to $0", false, factoryWindow)	orLabel = guiCreateLabel(20, 421, 265, 16, "OR", false, factoryWindow)	guiLabelSetHorizontalAlign(factoryIronLabel, "center", false)	guiSetFont(factoryIronLabel, "default-bold-small")	guiLabelSetHorizontalAlign(descLabel, "center", true)	guiLabelSetHorizontalAlign(factoryCostLabel, "center", false)	guiLabelSetHorizontalAlign(moneyLabel, "center", false)	guiLabelSetHorizontalAlign(orLabel, "center", false)	--Edits	factoryIronInput = guiCreateEdit(41, 339, 229, 22, "", false, factoryWindow)		--Events 	addEventHandler("onClientGUIClick", factoryMakeAmmo, onFactoryMakeAmmoClick,false)	addEventHandler("onClientGUIClick", closeFactoryWindow, onFactoryWindowClose,false)	addEventHandler("onClientGUIClick", sellIron, sellIronFunc,false)	addEventHandler("onClientGUIChanged", factoryIronInput, onFactoryIronInput,false)		for k,v in ipairs(factoryRadioButton) do		addEventHandler("onClientGUIClick", v, onRadioButtonClick, false)	end		--Progressbar	factoryProgressBar = guiCreateProgressBar((rx/2) -350,(ry/2) -25,700,57,false)	guiSetVisible(factoryProgressBar, false)endfunction sellIronFunc()	if (curreniron) then		triggerServerEvent("CITmin.SellIron", root, curreniron)	endendfunction DisplayMinWindow(totalIron, costTable, m)	if (factoryWindow) then				if (guiGetVisible(factoryWindow)) then			guiSetVisible(factoryWindow, false)			showCursor(false)		else			guiSetVisible(factoryWindow, true)			showCursor(true)		end	else		makeFactoryGUI()		showCursor(true)	end		if (totalIron and costTable) then		tempCostTable = costTable		pRankMultiplier = m		currentFactoryIron = totalIron		guiSetText(factoryIronLabel, string.format("You currently have %s grams of iron", totalIron))		updateRadioButtons()	endendaddEvent("CITmin.DisplayMinWindow", true)addEventHandler("CITmin.DisplayMinWindow", root, DisplayMinWindow)function updateData(totalIron)	currentFactoryIron = totalIron	guiSetText(factoryIronLabel, string.format("You currently have %s grams of iron", totalIron))endaddEvent("CITmin.UpdateData", true)addEventHandler("CITmin.UpdateData", root, updateData)function updateRadioButtons()	if (tempCostTable) then		for k,v in ipairs(factoryRadioButton) do			guiSetText(v, string.format(guiGetText(v), tempCostTable[k][2]))		end	endendfunction onRadioButtonClick()	currentFactoryWeapon = tempCostTable[getFactoryButtonSourceIndex(source)][2]	currentFactoryWeaponID = tempCostTable[getFactoryButtonSourceIndex(source)][3]	updateCostLabel()endfunction onFactoryWindowClose()	triggerEvent("CITmin.DisplayMinWindow", root)endfunction onFactoryIronInput()	local number = tonumber(guiGetText(source)) or 0	if (number <= currentFactoryIron) then		guiSetText(source, tonumber(number) or "")		curreniron = number		updateCostLabel()	else		curreniron = 0		guiSetText(source, "")		updateCostLabel()	endendfunction onFactoryMakeAmmoClick()	if (curreniron and currentFactoryWeapon) then		if (guiGetEnabled(factoryMakeAmmo)) then			guiSetEnabled(factoryMakeAmmo, false)			triggerServerEvent("CITmin.CheckPlayerIron", root, curreniron, currentFactoryWeapon)			setTimer(guiSetEnabled, 3000, 1, factoryMakeAmmo, true)		end	endendfunction getFactoryButtonSourceIndex(button)	for k,v in ipairs(factoryRadioButton) do		if v == button then			return k		end	endendfunction updateCostLabel()	if (currentFactoryIron and curreniron) then		if (currentFactoryWeapon) then			local num = math.floor((curreniron * currentFactoryWeapon) /1000)			guiSetText(factoryCostLabel, string.format("%s units per %s grams of iron", num ,curreniron))		end		local num = (curreniron*1.2) * pRankMultiplier		guiSetText(moneyLabel, string.format("From $%s to $%s", math.floor(num * 0.5), math.floor(num * 1.5)))	endendfunction DisplayMinWindow(iron, bulletAmmount)	timerInterval = (iron/20)	if (timerInterval < 50) then		timerInterval = 50 	end	guiSetVisible(factoryProgressBar, true)	setTimer(scrollBarAddProgress,timerInterval,101)	triggerEvent("CITmin.DisplayMinWindow",root)	showCursor(true)endaddEvent("CITmin.CraftIron", true)addEventHandler("CITmin.CraftIron", root, DisplayMinWindow)function scrollBarAddProgress()	if (guiProgressBarGetProgress(factoryProgressBar) == 100) then		guiProgressBarSetProgress(factoryProgressBar, 0)		guiSetVisible(factoryProgressBar, false)		triggerServerEvent("CITmin.GivePlayerAmmo",root, curreniron, math.floor((curreniron * currentFactoryWeapon) /1000), currentFactoryWeaponID)		triggerServerEvent("CITmin.GetMinningStats",root)	else		guiProgressBarSetProgress(factoryProgressBar, guiProgressBarGetProgress(factoryProgressBar) +1)	endend---------------Minigame GUI----------------function makeMinigameWindow()	local rx, ry = guiGetScreenSize()	minigameWindow = guiCreateWindow((rx/2) -167,(ry/2) -170,336,343,"Destroy all rocks to find iron...",false)	guiWindowSetSizable(minigameWindow,false)	guiSetAlpha(minigameWindow, 0.96)		--Buttons	minigameButton[1] = guiCreateButton ( 0.0655, 0.1166, 0.3214, 0.3324,"", true, minigameWindow)	minigameButton[2] = guiCreateButton ( 0.0655, 0.4956, 0.3214, 0.3324,"", true, minigameWindow)	minigameButton[3] = guiCreateButton ( 0.6071, 0.1137, 0.3214, 0.3324,"", true, minigameWindow)	minigameButton[4] = guiCreateButton ( 0.6101, 0.4956, 0.3214, 0.3324,"", true, minigameWindow)	finishMinigame = guiCreateButton(0.0685,0.8455,0.8631,0.1166,"Finish",true,minigameWindow)		--Images	minigameImage[1] = guiCreateStaticImage ( 0.0655,0.1166,0.3214, 0.3324, "images/rock.png", true, minigameWindow )	minigameImage[2] = guiCreateStaticImage ( 0.0655,0.4956,0.3214, 0.3324, "images/rock.png", true, minigameWindow )	minigameImage[3] = guiCreateStaticImage ( 0.6071,0.1137,0.3214, 0.3324, "images/rock.png", true, minigameWindow )	minigameImage[4] = guiCreateStaticImage ( 0.6101, 0.4956, 0.3214, 0.3324, "images/rock.png", true, minigameWindow )	--ProgressBar	minigameProgressBar = guiCreateProgressBar((rx/2) -350,(ry/2) -25,700,57,false)	guiSetVisible(minigameProgressBar , false)		--Events	addEventHandler("onClientGUIClick", finishMinigame, onMinigameFinish, false)	addEventHandler("onClientGUIClick", minigameImage[1], minigameDestroyRock1, false)	addEventHandler("onClientGUIClick", minigameImage[2], minigameDestroyRock2, false)	addEventHandler("onClientGUIClick", minigameImage[3], minigameDestroyRock3, false)	addEventHandler("onClientGUIClick", minigameImage[4], minigameDestroyRock4, false)endfunction onMinigameGUI()	if (minigameWindow) then		if (guiGetVisible(minigameWindow)) then			guiSetVisible(minigameWindow, false)			guiSetVisible(minigameProgressBar, false)			showCursor(false)		else			guiSetVisible(minigameWindow, true)			showCursor(true)			showMinigameElements()		end	else		makeMinigameWindow()		showCursor(true)	endendaddEvent("CITmin.ShowMinigameGUI", true)addEventHandler("CITmin.ShowMinigameGUI", root, onMinigameGUI)function showMinigameElements()	for i,v in ipairs (minigameImage) do		guiSetVisible (v, true)	end	for i,v in ipairs (minigameButton) do		guiSetVisible (v, true)	endendfunction onMinigameFinish()	triggerEvent("CITmin.ShowMinigameGUI", root)	setTimer(triggerEvent, 1500, 1, "CITmin.JobStarting", localPlayer)endfunction minigameProgressBarAddProgress(image, button)         	guiProgressBarSetProgress(minigameProgressBar, guiProgressBarGetProgress(minigameProgressBar) +1)                    	if (guiProgressBarGetProgress (minigameProgressBar) == 100) then		triggerServerEvent("CITmin.GiveIron", localPlayer)		guiSetVisible (minigameProgressBar, false )		guiSetVisible (minigameWindow, true )		guiSetVisible (image, false )		guiSetVisible (button, false )			guiProgressBarSetProgress(minigameProgressBar, 0) 	endendprogresstimer1 = nilfunction minigameDestroyRock1 ()	guiSetVisible (minigameProgressBar, true )	guiSetVisible (minigameWindow, false )	progresstimer1 = setTimer (minigameProgressBarAddProgress, 100, 100, source, minigameButton[1])endprogresstimer2 = nilfunction minigameDestroyRock2 ()	guiSetVisible (minigameProgressBar, true )	guiSetVisible (minigameWindow, false )	progresstimer2 = setTimer (minigameProgressBarAddProgress, 100, 100, source, minigameButton[2])endprogresstimer3 = nilfunction minigameDestroyRock3 ()	guiSetVisible (minigameProgressBar, true )	guiSetVisible (minigameWindow, false )	progresstimer3 = setTimer (minigameProgressBarAddProgress, 100, 100, source, minigameButton[3])endprogresstimer4 = nilfunction minigameDestroyRock4 ()	guiSetVisible (minigameProgressBar, true )	guiSetVisible (minigameWindow, false )	progresstimer4 = setTimer (minigameProgressBarAddProgress, 100, 100, source, minigameButton[4])endfunction hideAllOnQuit()	if (minigameWindow) then		if (guiGetVisible(minigameWindow)) then			guiSetVisible(minigameWindow, false)			guiSetVisible(minigameProgressBar, false)			showCursor(false)		end	end	if (minigameProgressBar) then		guiSetVisible(minigameProgressBar, false)		showCursor(false)		if (isTimer(progresstimer1)) then			killTimer(progresstimer1)		elseif (isTimer(progresstimer2)) then			killTimer(progresstimer2)		elseif (isTimer(progresstimer3)) then			killTimer(progresstimer3)		elseif (isTimer(progresstimer4)) then			killTimer(progresstimer4)		end	end	if (factoryWindow) then		if (guiGetVisible(factoryWindow)) then			guiSetVisible(factoryWindow, false)			showCursor(false)		end	endendaddEvent("CITMiner.hidewindowsonquit", true)addEventHandler("CITMiner.hidewindowsonquit", localPlayer, hideAllOnQuit)function hideAllOnDead(killer, weapon, bodypart)	if (minigameWindow) then		if (guiGetVisible(minigameWindow)) then			guiSetVisible(minigameWindow, false)			guiSetVisible(minigameProgressBar, false)			showCursor(false)		end		guiProgressBarSetProgress(minigameProgressBar, 0) 	end	if (minigameProgressBar) then		guiSetVisible(minigameProgressBar, false)		showCursor(false)		if (isTimer(progresstimer1)) then			killTimer(progresstimer1)		elseif (isTimer(progresstimer2)) then			killTimer(progresstimer2)		elseif (isTimer(progresstimer3)) then			killTimer(progresstimer3)		elseif (isTimer(progresstimer4)) then			killTimer(progresstimer4)		end	end	if (factoryWindow) then		if (guiGetVisible(factoryWindow)) then			guiSetVisible(factoryWindow, false)			showCursor(false)		end	end	if (getElementData(localPlayer, "cor.job") == "Iron Miner") then		setTimer(triggerEvent, 1500, 1, "CITmin.JobStarting", localPlayer)	endendaddEventHandler("onClientPlayerWasted", localPlayer, hideAllOnDead)