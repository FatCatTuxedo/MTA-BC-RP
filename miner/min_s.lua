weaponsTable =  {	[1] = {"Colt .45", 142, 22},	[2] = {"Silenced 9mm", 142, 23},	[3] = {"Desert Eagle", 24, 24},	[4] = {"Sawn-off Shotgun", 20, 26},	[5] = {"SPAS-12", 20, 27},	[6] = {"AK-47", 43, 30},	[7] = {"M4", 50, 31},	[8] = {"Uzi", 62, 28},	[9] = {"Tec-9", 62, 32},	[10] = {"MP5", 62, 29},	[11] = {"Shotgun", 20, 25},	[12] = {"Country Rifle", 100, 33},	[13] = {"Sniper Rifle", 5, 34},	[14] = {"Grenade", 1, 16},}ironMinerArea = createColCircle(603, 878, 250)function isPlayerInIronMinerArea(player)	if (isElementWithinColShape(player, ironMinerArea)) then		return true	end	return falseendfunction onMinerAreaEnter(hitElement, mDim)	if (mDim and isElement(hitElement)) then		triggerClientEvent(hitElement, "CITmin.JobStarting", hitElement)	endendaddEventHandler("onColShapeHit", ironMinerArea, onMinerAreaEnter) factoryMarker = createMarker(274.39788818359, 1361.9630126953, 9.5859375, "cylinder", 15, 255, 255, 0, 150)factoryBlip = createBlipAttachedTo(factoryMarker, 18)setElementVisibleTo(factoryMarker, root, false)setElementVisibleTo(factoryBlip, root, false)setBlipVisibleDistance(factoryBlip, 600) function onFactoryMarkerHit(hitElement)	if (getElementType(hitElement) == "player") then		if (exports.CITbusiness:getPlayerJob(hitElement) == "Iron Miner") then			if (isPedInVehicle(hitElement)) then  				playerVeh = getPedOccupiedVehicle(hitElement)				if (isElement(playerVeh)) then					if (getElementModel(playerVeh) == 573) then						triggerClientEvent(hitElement, "CITmin.DisplayMinWindow", hitElement, exports.CITaccounts:invGet(getPlayerAccount(hitElement), "iron"), weaponsTable, exports.CITpromotions:getJobRankUnitPay("Iron Miner", exports.CITpromotions:getPlayerJobRank(hitElement, "Iron Miner")))						setElementVelocity(playerVeh, 0, 0, 0)					elseif (not isPedInVehicle(hitElement)) then						exports.CORtexts:output("You must be in a Dune to unload your iron and craft it!", hitElement, 255, 0, 0)					elseif (getElementModel(getPedOccupiedVehicle(hitElement)) ~= 573) then						exports.CORtexts:output("You must be in a Dune to unload your iron and craft it!", hitElement, 255, 0, 0)					end				end			end		end	endendaddEventHandler("onMarkerHit",factoryMarker, onFactoryMarkerHit) function onGivePlayerIron()	local multiplier = exports.CITpromotions:getJobRankUnitPay("Iron Miner", exports.CITpromotions:getPlayerJobRank(client, "Iron Miner"))	local ironAmmount = math.floor(math.random(36, 132)*multiplier)	local playerAccount = getPlayerAccount(client)	exports.CORtexts:output("You have extracted "..ironAmmount.." grams of iron", client, 0, 255, 0)	currentIron = exports.CITaccounts:invGet(playerAccount, "iron")	currentLifetimeIron = exports.CITaccounts:invGet(playerAccount, "lifetimeiron")	exports.CITaccounts:invSet(playerAccount, "iron", (currentIron or 0)+ironAmmount)	exports.CITaccounts:invSet(playerAccount, "lifetimeiron", (currentLifetimeIron or 0)+ironAmmount)	if (not isElementVisibleTo (factoryMarker, client)) then		exports.CORtexts:output("Now you can craft the iron you extracted", client, 0, 255, 0)		setElementVisibleTo(factoryMarker, client, true)		setElementVisibleTo(factoryBlip, client, true)	endendaddEvent("CITmin.GiveIron", true)addEventHandler("CITmin.GiveIron", root, onGivePlayerIron)function sellIron(iron)	local playerAccount = getPlayerAccount(client)	local playerIron = exports.CITaccounts:invGet(playerAccount, "iron")	if (playerIron) then		if (iron > 0) then			if (iron <= playerIron) then				local multiplier = exports.CITpromotions:getJobRankUnitPay("Iron Miner", exports.CITpromotions:getPlayerJobRank(client, "Iron Miner"))				local mAmount = math.floor(math.random((iron * 1.2) * 0.5, (iron * 1.2) * 1.2) * multiplier)								if (mAmount > 1000000) then					exports.CORtexts:output("Max sale is $1,000,000 iron", client, 0, 255, 0)					return false				end								if (exports.CITchecking:getPlayerTimeSinceLastOccurence(client, "ironSale", true) < 60000 * 60) then					outputChatBox("You can only sell iron once an hour", client, 255, 0, 0)					return				end				exports.CITchecking:setPlayerOccurenceTime(client, "ironSale", nil, true)								exports.CITaccounts:invSet(playerAccount, "iron", playerIron - iron)				exports.CITaccounts:GPM(client, mAmount, "CITminer sold iron amount: "..iron.." remaining: "..playerIron - iron, true)				triggerClientEvent(client, "CITmin.UpdateData", client, exports.CITaccounts:invGet(getPlayerAccount(client), "iron"))				exports.CORtexts:output("You sold "..iron.." grams of iron for $"..mAmount, client, 0, 255, 0)			else				outputChatBox("You don't have enough iron", client, 255, 0, 0)			end		end	else		outputChatBox("You don't have iron!", client, 255, 0, 0)	endendaddEvent("CITmin.SellIron", true)addEventHandler("CITmin.SellIron", root, sellIron)function checkPlayerIron(iron, bulletAmmount)	local playerAccount = getPlayerAccount(client)	local playerIron = exports.CITaccounts:invGet(playerAccount, "iron")	if (playerIron) then		if (playerIron >= iron and iron >= 1) then			triggerClientEvent(client, "CITmin.CraftIron", client, iron, bulletAmmount)		elseif (playerIron < iron) then			outputChatBox("You don't have enough iron", client, 255, 0, 0)		end	else		outputChatBox("You don't have iron!", client, 255, 0, 0)	endendaddEvent("CITmin.CheckPlayerIron", true)addEventHandler("CITmin.CheckPlayerIron", root, checkPlayerIron) function givePlayerAmmo(ironAmmount, ammoAmmount, weaponID)	local playerAccount = getPlayerAccount(client)	local playerIron = exports.CITaccounts:invGet(playerAccount, "iron")	if (playerIron) then		if (ironAmmount < 1) then			return		end		if (playerIron >= ironAmmount) then			currentIron = exports.CITaccounts:invGet(playerAccount, "iron")			exports.CITaccounts:invSet(playerAccount, "iron", currentIron-ironAmmount)			exports.CITweapons:giveWeapon2(client, weaponID, ammoAmmount, true)		else			outputChatBox("What the fuck are you doing?", client, 255, 0, 0)		end	endendaddEvent("CITmin.GivePlayerAmmo", true)addEventHandler("CITmin.GivePlayerAmmo", root, givePlayerAmmo) function hideFactoryMarker(ironAmmount, ammoAmmount, weaponID)	local client = client or source	if (exports.CITbusiness:getPlayerJob(client) == "Iron Miner") then		if (isElementVisibleTo(factoryMarker, client)) then			setElementVisibleTo(factoryMarker, client, false)			setElementVisibleTo(factoryBlip, client, false)			triggerClientEvent(client, "CITmin.JobStop", client)		end	endendaddEvent("CITmin.HideFactoryMarker", true)addEventHandler("CITmin.HideFactoryMarker", root, hideFactoryMarker)addEventHandler("onPlayerEndShift", root, hideFactoryMarker) function showFactoryAgain(ironAmmount, ammoAmmount, weaponID)	if (exports.CITbusiness:getPlayerJob(client) == "Iron Miner") then		if (not isElementVisibleTo(factoryMarker, source)) then			setElementVisibleTo(factoryMarker, source)			setElementVisibleTo(factoryBlip, source)		end	endendaddEventHandler("onPlayerStartShift", root, showFactoryAgain) function getMinningStats()	local playerAccount = getPlayerAccount(client)	triggerClientEvent(client, "CITmin.DisplayMinWindow", client, exports.CITaccounts:invGet(playerAccount, "iron"), weaponsTable, exports.CITpromotions:getJobRankUnitPay("Iron Miner", exports.CITpromotions:getPlayerJobRank(client, "Iron Miner")))endaddEvent("CITmin.GetMinningStats", true)addEventHandler("CITmin.GetMinningStats", root, getMinningStats)function hideWindows()	if (exports.CITbusiness:getPlayerJob(source) == "Iron Miner") then		triggerClientEvent(source, "CITMiner.hidewindowsonquit", source)		if (isElementVisibleTo(factoryMarker, source)) then			setElementVisibleTo(factoryMarker, source, false)			setElementVisibleTo(factoryBlip, source, false)		end	endendaddEventHandler("onPlayerResign", root, hideWindows)function getCurrentIron()	local playerAccount = getPlayerAccount(client)	iron = exports.CITaccounts:invGet(playerAccount, "iron")	triggerClientEvent(client, "Miner.output", client, iron)endaddEvent("Miner.myIron", true)addEventHandler("Miner.myIron", root, getCurrentIron)function checkOnLogin()	if (exports.CITbusiness:getPlayerJob(source) == "Iron Miner") then		triggerClientEvent(source, "CITminer.StartJobOnLogin", source)	else		setElementVisibleTo(factoryBlip, source, false)		setElementVisibleTo(factoryMarker, source, false)	endendaddEventHandler("onPlayerLogin", root, checkOnLogin, true, "low")		